(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    414499,       8119]
NotebookOptionsPosition[    403109,       7930]
NotebookOutlinePosition[    403472,       7946]
CellTagsIndexPosition[    403429,       7943]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Particles in a Box via DFT",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.7921882580624733`*^9, 
  3.792188262617741*^9}},ExpressionUUID->"1271d184-a17b-433e-8f68-\
ea22f74acc3c"],

Cell["\<\
a) Write down the exact energies of the first three levels of the particle in \
a box of length 1,
the sums of these energies for 1, 2, and 3 levels, plot the wavefunctions for \
each level, and plot
the densities for 1, 2, and 3 same-spin fermions in the box.\
\>", "Text",
 CellChangeTimes->{{3.7921882801902103`*^9, 
  3.7921882889937887`*^9}},ExpressionUUID->"ae09cadd-d2e4-4e51-9c51-\
bb63e360fe77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"boxenergy", "[", "n_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", "2"], 
    SuperscriptBox["\[Pi]", "2"]}], "2"]}], "\[IndentingNewLine]", 
 RowBox[{"boxenergy", "[", "1", "]"}], "\[IndentingNewLine]", 
 RowBox[{"boxenergy", "[", "2", "]"}], "\[IndentingNewLine]", 
 RowBox[{"boxenergy", "[", "3", "]"}]}], "Input",
 CellChangeTimes->{{3.792188752308309*^9, 3.792188803560012*^9}, {
  3.792241170336093*^9, 3.7922411725442753`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"1a257c6a-8f19-4ec8-bfc6-c2313d376d89"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "2"], "2"]], "Output",
 CellChangeTimes->{
  3.792188804053198*^9, 3.79221134157985*^9, {3.792241170699319*^9, 
   3.792241172898016*^9}},
 CellLabel->"Out[71]=",ExpressionUUID->"406f6562-2959-4046-b484-19b9fe3cc91d"],

Cell[BoxData[
 RowBox[{"2", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 CellChangeTimes->{
  3.792188804053198*^9, 3.79221134157985*^9, {3.792241170699319*^9, 
   3.792241172900681*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"8df5ac0e-1288-42d8-bda0-52c76a643c6e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"9", " ", 
   SuperscriptBox["\[Pi]", "2"]}], "2"]], "Output",
 CellChangeTimes->{
  3.792188804053198*^9, 3.79221134157985*^9, {3.792241170699319*^9, 
   3.7922411729031773`*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"78729214-3e35-47b9-be6c-16c62a72cfcf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"boxenergy", "[", "1", "]"}], "+", 
  RowBox[{"boxenergy", "[", "2", "]"}]}]], "Input",
 CellChangeTimes->{{3.792214324129511*^9, 3.792214334296029*^9}, {
  3.792214402840149*^9, 3.792214407651545*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9ad23b22-9220-4661-bbd1-f5d2aaf86374"],

Cell[BoxData[
 FractionBox[
  RowBox[{"5", " ", 
   SuperscriptBox["\[Pi]", "2"]}], "2"]], "Output",
 CellChangeTimes->{3.792214334786091*^9, 3.792214408013999*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"42eb3530-39a4-4376-97f5-9efadaff00d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"boxenergy", "[", "1", "]"}], "+", 
  RowBox[{"boxenergy", "[", "2", "]"}], "+", 
  RowBox[{"boxenergy", "[", "3", "]"}]}]], "Input",
 CellChangeTimes->{{3.7922144153116617`*^9, 3.79221441570613*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"da79d5e8-e817-4442-86fe-6592b0f5371e"],

Cell[BoxData[
 RowBox[{"7", " ", 
  SuperscriptBox["\[Pi]", "2"]}]], "Output",
 CellChangeTimes->{3.7922144160827303`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"de903f1f-2ae8-499a-a2e9-389ef6d8112d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"wavefuncBox", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Sqrt", "[", "2", "]"}], 
   RowBox[{"Sin", "[", 
    RowBox[{"n", " ", "\[Pi]", " ", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.792188905273645*^9, 3.792188941099085*^9}, {
  3.7921890528860893`*^9, 3.7921890557132177`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"748355c6-14b9-442f-a6e5-96d8c8f5acc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wavefuncBox", "[", "1", "]"}], ",", 
      RowBox[{"wavefuncBox", "[", "2", "]"}], ",", 
      RowBox[{"wavefuncBox", "[", "3", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<\[Phi](x)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<n=1\>\"", ",", "\"\<n=2\>\"", ",", "\"\<n=3\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Medium"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792188944662385*^9, 3.7921889908294363`*^9}, {
  3.792189066316052*^9, 3.792189070023246*^9}, {3.792210935834358*^9, 
  3.7922110183586407`*^9}, {3.792211061347782*^9, 3.792211071402256*^9}, {
  3.7922111257342653`*^9, 3.79221115197993*^9}, {3.792211746034787*^9, 
  3.792211748996461*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"870862ea-fc71-4bfd-a150-fa6b3ebc8a9d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwV2Hk4VesXB3CiKEVEopIhkjRJGsi3QoNU5qFbSKbkZ6xESjKEhCSpkMpN
pqQoSqUuDa5ZZTrO3ucYkumUnC2Zfu/9az+fZ7/Ps5693/WutfZWcvI2d5kh
ICAgJCgg8N/V2KW3ofy7lb7M6sowtvUZfWEDeR9KTht9UbW+GRbW2HAnJfWp
nCFCm9Yv9LZwxb6a5idpcpZwzGwTsbQ4DRvn0VeJcs64Hp08pWcRiY61lwyu
yJ1E2PA7XzGLZGTIHIyMkQtHivu92EPmDxAq+nRFtFwSLjjqvr578Bls7e4W
/PiZieA+sSK9DR8gNh16eLdCAS6m7vQwX90AVbOh3n8uFwEbFdb/L+krAmq3
IGWkFHs9G0UVbVmQLZJkCwq+QWL24q1mtTSecQ2q6/Te4aWxw6n9yZ1455G2
2G6gApp2nqo2uj3gq22TyP/fBxQtGt/1ILUXM8Zy5y9WrUJP2qxHjgv7oTPt
+MziUTX6jGSithkPojpcu/a9Rh06nA0Lv1jzsCyhfyx7qB4aQ335ss9/oH+U
Yn9Z1wij9R6Lft/5icy+l1XicU0QHlQwHIoahvjSLF5X12eUZpxV+WX7C7HH
i10zln+Fvecm0wKRETDbc7vcQ5ohG5Wr5FYwgrLM/tsB4c1I+bLdPb9wBBdF
NS0io5vRLGjpPvx0BOL1eW/vX2tGU61z0pmSEag5PEpnZzVjKNY45dTbEVif
K7S1rG/GORvddVpNIygufV4NpRYkZJ3LL+KP4KRWRdHCf1qg9FdCZLMOH67a
ihlXP7ZA5aNcw8hmPmx1gi/PrW1BnWRw4nxdPnS3ajvNaG2B7OK1gQbgY8bO
TImhoRb4OcxvTN7NR7xZuEelfCvKZqsn/LLhI8fHUPGkXytc2qp0wgP4oB5V
XG5QasPzZmGrP4V81A8KD2itaEO3uINm3lM+yjWNTJI027AgUOvC4WI+MnIq
59psasPpo9WpJSV8OD14f4Vl0galqsgH9m/4ZJ8+xn8LaMMaiR3co9V8DMZW
X5usacPryafrDbv5YP87d8S+qQ0lCz87VPbwUTtnv2V5SxvyBlmzjHr5eBRV
Ix3W2Yao7m1v0M+HT3jtddGxNvi4WH9V/snHyNn6GwuWt2NW7KxLdyb4GPf4
fHtlUDvcFq3Y4SfFwFLnyNU1Ie14tKSjNXcBgzzBnsgN4e0wTQta3CXNwD5l
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

          "]]}, Annotation[#, "Charting`Private`Tag$6148#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6148#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
yfn//+/8H87l0d4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$6148#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"\[Phi](x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> Medium, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-1.4142133632704514`, 1.4142135210332178`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"n=1\"", "\"n=2\"", "\"n=3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.792188968709622*^9, 3.7921889911537733`*^9}, {
   3.792189057744882*^9, 3.7921890703995323`*^9}, 3.792210944927319*^9, 
   3.792210979943604*^9, 3.792211019251808*^9, 3.792211071932343*^9, {
   3.792211138145788*^9, 3.792211152535591*^9}, 3.792211344600071*^9, {
   3.792211747090926*^9, 3.7922117494400387`*^9}},
 CellLabel->"Out[16]=",ExpressionUUID->"97b2ff52-4a56-4f3c-a2cc-724318257853"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<box_wave.eps\>\"", ",", "p1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.792211154205906*^9, 3.7922111728005323`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"bebb42ed-ad96-48ba-bbbd-decfd9746f96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"wavefuncBox", "[", "1", "]"}], "^", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"wavefuncBox", "[", "1", "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"wavefuncBox", "[", "2", "]"}], "^", "2"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"wavefuncBox", "[", "1", "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"wavefuncBox", "[", "2", "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"wavefuncBox", "[", "3", "]"}], "^", "2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<n(x)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(n\), \(1\)]\)(x)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(n\), \(2\)]\)(x)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(n\), \(3\)]\)(x)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Medium"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792189089250597*^9, 3.792189093816039*^9}, {
  3.792211080412442*^9, 3.792211121927992*^9}, {3.792211177128549*^9, 
  3.792211177502778*^9}, {3.792211470390894*^9, 3.792211520573359*^9}, {
  3.792211755219811*^9, 3.7922117559598103`*^9}, {3.7922155809466677`*^9, 
  3.792215618587207*^9}, {3.79223992020313*^9, 3.7922399227466383`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"19bfea1c-45d3-4da2-a637-2535662bce1d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwV2Xk8VN0fB3BLiyhb5LGUypJKkkdE8SkUWXqSLZJsSbJTWbIVQqIkSbKk
EpKdSJGkUrJnnxlLUphLkYi5v/v7a17v15x7zj13Pt9zzn3NJnuPY6c52NjY
rrKzsf3/U//0WGvtdzNNhlHFHbUrHBrLtMU86aLKSE0b+O/ZlhrNf9OTU0tE
dZAdl3BDegtdc0RCOuyi7BFo6hUZf4+Y1jRo6iq+L2qKSUFpvh5ZUlM6dv0j
UtISWdIlEfrmXFjUd7hjJ2uD86+K9zdECOBHeEe9XZIdfNjriTs9IrBwnHuZ
IOqIsz1db5NlJVGvLVbxJtUJksLcwQ7lUlCU0iickTyLbeZBuvzmckjlsM2R
yTqHP6XK6cbeO8A1dPmBuaw7htqcpG5F7EIVo63pjakncuQbPQ/dUIbnUUd9
6yQvfOXSWjjQo4qBnVe1r4v6QuBmagivLJCY/k+tzInz2Mg83stMPAB9vtx9
r1IvIDxv46c/ZdooZ37aTUj6I9x1/z0vMz242tgUX7ULQIJ44nF6uz42fyYU
NmYFwjtEYoeblxHi8gXljGWDceCiqs6vcGMcXP/w4fczIThQZGTpzGGC4IYU
/temoejrtl3vGm8KZRX565ZJYZBgqclv6LZAhvB/kTGi4Th8izGyUfoUApvu
1JtXhYPLWmcFW7wtzCMYHFInImBSuEG97JYdVs96hbxIjYT1R9XLHqUO8OtI
9JuQjMaB1mPyEibOMIkdKH9eG42K8cnTu+LOQkFHdjbcLgZ7XLj5uFtdMFJS
4bU+6xpCfFN9lrm7wfhWr8sR2TisaE/eG3PZC/IGUjli7+KgcT1eeAO8wcXp
+m30TDxktOOPJZDeOFXJKqoxvYHf+qfUxGN9Ibz1hsLxpJuIqjp7Kqf9IsK4
SrZEiyZigVG9IVoiBNt0b0YVeyYiZGvmAZl1oWiL8Pje9y4RqW65UgYZoZDm
lM9TuHAbs0Unuk+/CEPD0kOFjrYkjOUxo9pWh2P1r6TdkrF3kfq+g8dBIhpl
u84n6Q3fReN/Nz5cfh8NG0+TOS/1FATOcE+PXIhBwSRfZf1YCrpPCJV59F7D
sbGofS4HU3E7Ut73bnUckgcCtMtYaZCwlnC4eiEBByQsH9LM0nF1InpbGi0B
P6xUl3Plp2NfkoRXh+4tbJjwd8jfkQGRNSRH+vpEeJxVkWHrz8Ce3YzeJ19u
Q9Cx4MmjPQ/A5i5k4RN8F8ctMwumph9ip0Kd4XxrBog+U+4HYo9grNzooLI2
E5E2XKdNtB/h3t6ZUaZpJkocPMTKEx9BegX7VGtPJnjdNSICVR8j732kus33
B3h7ucdqRVA2euY6n4dKPoLSU4EVEly5+G9B2djjWw4+KLy1bVLMxV7D9z1z
qrmwLfJ7EWyZi4273kTOR+XiejndczA3Fxfuci6dkc/DWG1+32OjPGRkZKwn
/J4irfNw0a5bT5F5mH/kllwBeMgwa90NBdj1judKs2cxks9a2MgfKoDVtYyZ
jPRiSHfI2wq4F0Dw0TODvM/F0Mzpcuh7WYCU23xBLjtKUJmTVFahUIhffF35
NydLMGkyUW3wuRDKLaGb/f3KYPbkzkefNcXQiBx3Of78OWSMmWNvrpVClOBS
uD5QA7EQXfUzmaXozBHOf8ZXC/78jGvcFaXIyXc2K1esxQKXiYLxUCniRq+q
SvvUoqW2woe2pwyc77LU/edrEaAYxvrztQwnN6z+RvLU4TOfkJDC/gq4P9ay
26tXj4uf1ZA8U4nAjtqabeIfIFIqQGNnr0Han3ODK7JbUT6k/al5Xx30ViWM
BC50oc7lvrjlRD1S7/m94BmhYVZWgy/f7R0Ol6/W/jM5BI75PH5xmUacufbq
Y9vkKFRI23KTZ5+wU6v4zd7mH/gUrvy5YVszaswzcrYWMSF5Y3w+h9mCuoNZ
0TYXpjE+R6d1KrZBt7/ptoLLLzz88aKRN64dtZ+z5/P8ZsG7PpsYGelAZYn6
7M7Tc4g9W+aUIf0Fz/O85tXWzuP3/rwR55AuaG1oKF/2agG+SvWl6950w8vb
5kXRxkU4KW/MuPm+G0LmGqeNZBdxXOXStdWfu/Fne3PM1+2L2KuubM/R042E
8AQtHtVFcGg95GMyu2EyH6oqb7SIeONwl7diPWi89LC1zm8RuZ46G329exDF
975NtWkR9Gf111o39YLNUXBwwmUJLZPLJpS29CKIXyQ5wmMJtfIHDRPle7Gm
yiNezHcJGblvV1uo9mL2D5u6WtAS7B83XO837IXMDdETh+OXMHr/ffy3i70o
XGdQWlK8hMnYT7eWmnrhNJjz75PfS6B9XD1j096L3XcS4hsWlvCZ28i0trsX
y+pmlg2ylvAsqknoynAvinYmqHKvZMEz/PNtrvleSMSfSd0hwsJMYMudtdJ9
YKx5e7ZChYW/Lh33tgb0IXrR7WKzNwumKidvKoT0wUMvsEHxAgtP2Ucj/w3v
Q+DP6IQ4fxZskue8NOL68FbuTBpCWXj9VkzP+EEfWs75uF+8zsLVjXYzfo19
EDy1W0Mjm4W1XyYN34v1Q0bjyQ6JbhZcMy9oNUn2Q/8TfzJPHwv1rqRqm3Q/
RpWWnOYGWLjAKSDVr9APpdWxO+uHWehRVJ4ntPoxWNFvoUSwkH4t4JHIuX64
TnOcs11OYvuBlSynF/0wJq7NsRRIFObmbemu7Udfk+mPZ7tIKAsdNT7c0I+X
eW2RVsok9n1Lfri9tR8PRYcqH6qROHJ9m8HUKNV+3aFfy3RIePcYJfsLDmBh
aox3xoLEb62fr3+IDCBjYb+OjRWJwKdJ4yfWD8CfLBSptyYRHkLX1JQbgIzt
+qTLdiSSZLy+cmgOINbJkNboQqLSK1Ep9uwAuob0VkVdIqHZt8d6yX0An3Re
tuQFk6jTGYhw9x1AQMfE9o+hJBpFZHuOhgzA5oTgvcVwEv0vK0KEbw/g0lCz
wbbrJNi4+z6l1VLjr+W8UJhKQvfBpjNFIjTI2zptcXxOzTeZV7ZBgob9Saa3
aZUkNsb9HendREPNcIio2QsSC/6d9svkafBYEHVQeUUi3zjaxmI/Dbs2OE9/
eENiLfu02ZIzDezfyHzlz9R4cwNCgu40TFYomXs2k5iYaGyX9aHB9aEO35MW
Eg3dD42PBtFAi2wp5mkn4V943CjrJg2kvn5FVhcJ+qlancNVNNjLrr64jkHi
k1k+p00NDZEp89xrB0k8N0ip866nQaDePo9niESCqu/+1M80GFUX8U8PkzjI
J7ePGKLh8fwLp9hvJJSWC//lHKOhlZi3ODtGYsNf9qp/JmlQUmeYaH0n8We0
T1Vrjob85s8uYz9I5L2K//c2Dx0s3Ri+5UwSyaWXfubw01Fx0OpoHeXw3LNF
r4Tp6IFmSiBBwiZJe+eYJB3NlTF6Q1MkBNzntu1VpsPyrzN36C8SLIeR7/+p
0XF3+/L49TMkfli2PnHUpGN8s614BeX6g3mycXp0bI+v0qfNkri4/tTmQWs6
0psE2JbmSNgfVTTvt6PjN8vkqN8fKn9X2GO6nOiIoDV/JijLfs+abvKko1OL
07x9noSgxHmZD+fpiDoZboMFEktHDlnWB9DhcKwtMZtyR+lYbVU4HWmc3jGu
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
FwF+rw==
          "]]}, Annotation[#, "Charting`Private`Tag$25771#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
/vv/96j/AQmr8SA=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25771#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
rHvjNI5/tuiM16FvdHiGYjO/Ya7Oql2rqqKDRaP4gcM4f69T9j8wrKVDx8sq
wUbMTu9TOGn1uH40bZEdzj+KEgm42ESH3psppVxYn9HHq09c23A9eJ4o/Z+e
hb4u/MvtOD+BF7T0sd7Bt/vDfGl0mCr02fa/33dUrpS/fN5Dh4DKgREO7J/1
1ipCIv10uPKtqG39KwLqNI+Pih/Eft7aK7IZ+81Hz/9tzigdtoulVVpiP7ZZ
OlgoM+lwoWemJwz7Vfr68a2pE3QQfSnQ1IL9XP+O8iL+Fx1e2Liqer4lINGC
+ZPic3T41Sr+6WccAV1rpvFGL9Chqj906TiuB8G/sY+e/8H126m46QyuF3uK
rzb/Kh1Uk2qGWLieCv+zYwtao4NI+/LDl7jeLE3k7/hyjkDmrZcHCam4PtPy
nF35R2Ay/PZFP1zPf769lp8kj8DUnuD4h7jeT3TdG7u8cQTcNb58DsX9YHaD
tvVFoRF4IVVCaf5CQAetWkwMJUfgZr5B9XAlAbUKMA4oqI3A7vghC9efBCS5
o2Eped8ILGgX1mn0ENB1+JwrdWAELB8uNFD6sd+dPHeJoBGYIH32GaHjflfF
JsWtPwJqR0xkpWYIaOnmVm7GhRGwKt2+eY6HiPRDVqptrUYgv3Eu0o9ERLEJ
/Q/7bUZAL+2+peRGItL6nrhKvTwCq58TIh8IE1GwvMpMldsIlLaMUTp2ENH2
Xv3OeP8RkJhE819w/w+qOJBuGjgCXy6vbnc+SUSzyQqPCE/wefoa1RRMiKjC
nV/1atgI9JVvnPhxgYjsiG2hKtEjQAiJ1K91I6IPe84eLc/A34+OydeIISKl
oMt5fd0jUFejOjXxh4girpk/DevD+/+VkNZi50JrJsfstAZHoLLgfVQCAd+3
4jsFkkZHYDPP+Q0hglzILXfa2XlmBObCTpFmlLhQzsB1mZUNo6B0vGgL8xIX
0lD3C9+qMgonlBWsJHu4ENVmq1qs6igYLJGizg5zIY+QzzQJ9VF4y9Hs/Xqc
C6WOdArLHRyF8UTh9XuWudC2cMV3arqjYJpYJ92wmRtxzFDTTp8bhW6tUbP7
p7lRQ8qOmqcPRoH9S6GNdxs3stjWssz+YxRmCenPbg3xoIX6p0OuvmNgQ9X6
yWHCj3p4OhxWHo7B7N7QJP4L/KjCQJQV8GgM4hR23dliz4/CmlP+vnkyBgkN
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
jv3//5f7P43hAzs=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$25771#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"n(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     Medium, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0., 4.315565014295876}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(1\\)]\\)(x)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(2\\)]\\)(x)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(n\\), \\(3\\)]\\)(x)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.792211496778565*^9, 3.7922115220800447`*^9}, 
   3.792211756455246*^9, {3.792215594323782*^9, 3.792215619074663*^9}, 
   3.7922399232766037`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"0b5a55ec-a5fa-4df2-89db-f6f34f997542"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<box_dens.eps\>\"", ",", "p2"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.792211180368034*^9, 3.792211185406156*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"768b83e8-0ef6-4ebd-afea-3a681d61402e"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  SuperscriptBox["\[Pi]", "2"], "6."]], "Input",
 CellChangeTimes->{{3.792237374116498*^9, 3.792237380360723*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"69bafba9-8d0c-408b-9a80-0b80a553c610"],

Cell[BoxData["1.6449340668482262`"], "Output",
 CellChangeTimes->{{3.792237378036151*^9, 3.7922373806514597`*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"2e1ff94e-29b1-41cf-ac55-72c4760a715c"]
}, Open  ]],

Cell[TextData[{
 "b) Solve the Euler-Lagrange equation with the TF approximation to the \
kinetic energy to find\nthe relation between N and \[Mu]. Solve for the \
mininimizing density, and plot it on your density\nplots. Comment on the \
errors made by this approximate density, and how the error behaves as\nN \
grows. Calculate the integral of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6085931e-d0ae-4b5b-ab93-d170caf01abb"],
 "(x) for N = 1, 2, 3, both exactly and approximately and\ncomment as N grows."
}], "Text",
 CellChangeTimes->{{3.792211805039732*^9, 
  3.792211826344646*^9}},ExpressionUUID->"534e514c-bbb7-454d-84db-\
58e864e54eed"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"minDens", "[", "N_", "]"}], ":=", "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"thomasKE", "[", "n_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "6"], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"n", "^", "3"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.792238720446561*^9, 3.792238727461212*^9}, {
  3.79223875962584*^9, 3.7922387601988707`*^9}, {3.7922394390281343`*^9, 
  3.792239472511764*^9}, {3.792239505807639*^9, 3.7922395059966097`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"494dd59a-4f43-4e6e-ab8c-9d31d1598399"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tenparticles", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"wavefuncBox", "[", "1", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "2", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "3", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "4", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "5", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "6", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "7", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "8", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "9", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "9", "]"}], "^", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.792239822855007*^9, 3.7922398557922153`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"091d1569-83b3-429b-97d1-65a284dd26b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"wavefuncBox", "[", "1", "]"}], ",", 
      RowBox[{"minDens", "[", "1", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<n(x)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Exact\>\"", ",", 
       "\"\<\!\(\*SubsuperscriptBox[\(n\), \(1\), \(TF\)]\)(x)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Medium"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.79223993790578*^9, 3.792239945091131*^9}, {
  3.7922400019080887`*^9, 3.792240004696615*^9}, {3.792251155643923*^9, 
  3.792251156573441*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"93d0a0cb-6a56-4778-8c52-a0e0010a4f67"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwV2Hk4VesXB3CiKEVEopIhkjRJGsi3QoNU5qFbSKbkZ6xESjKEhCSpkMpN
pqQoSqUuDa5ZZTrO3ucYkumUnC2Zfu/9az+fZ7/Ps5693/WutfZWcvI2d5kh
ICAgJCgg8N/V2KW3ofy7lb7M6sowtvUZfWEDeR9KTht9UbW+GRbW2HAnJfWp
nCFCm9Yv9LZwxb6a5idpcpZwzGwTsbQ4DRvn0VeJcs64Hp08pWcRiY61lwyu
yJ1E2PA7XzGLZGTIHIyMkQtHivu92EPmDxAq+nRFtFwSLjjqvr578Bls7e4W
/PiZieA+sSK9DR8gNh16eLdCAS6m7vQwX90AVbOh3n8uFwEbFdb/L+krAmq3
IGWkFHs9G0UVbVmQLZJkCwq+QWL24q1mtTSecQ2q6/Te4aWxw6n9yZ1455G2
2G6gApp2nqo2uj3gq22TyP/fBxQtGt/1ILUXM8Zy5y9WrUJP2qxHjgv7oTPt
+MziUTX6jGSithkPojpcu/a9Rh06nA0Lv1jzsCyhfyx7qB4aQ335ss9/oH+U
Yn9Z1wij9R6Lft/5icy+l1XicU0QHlQwHIoahvjSLF5X12eUZpxV+WX7C7HH
i10zln+Fvecm0wKRETDbc7vcQ5ohG5Wr5FYwgrLM/tsB4c1I+bLdPb9wBBdF
NS0io5vRLGjpPvx0BOL1eW/vX2tGU61z0pmSEag5PEpnZzVjKNY45dTbEVif
K7S1rG/GORvddVpNIygufV4NpRYkZJ3LL+KP4KRWRdHCf1qg9FdCZLMOH67a
ihlXP7ZA5aNcw8hmPmx1gi/PrW1BnWRw4nxdPnS3ajvNaG2B7OK1gQbgY8bO
TImhoRb4OcxvTN7NR7xZuEelfCvKZqsn/LLhI8fHUPGkXytc2qp0wgP4oB5V
XG5QasPzZmGrP4V81A8KD2itaEO3uINm3lM+yjWNTJI027AgUOvC4WI+MnIq
59psasPpo9WpJSV8OD14f4Vl0galqsgH9m/4ZJ8+xn8LaMMaiR3co9V8DMZW
X5usacPryafrDbv5YP87d8S+qQ0lCz87VPbwUTtnv2V5SxvyBlmzjHr5eBRV
Ix3W2Yao7m1v0M+HT3jtddGxNvi4WH9V/snHyNn6GwuWt2NW7KxLdyb4GPf4
fHtlUDvcFq3Y4SfFwFLnyNU1Ie14tKSjNXcBgzzBnsgN4e0wTQta3CXNwD5l
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

          "]]}, Annotation[#, "Charting`Private`Tag$116905#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGDwwX6BqH9bl2SLPYzfyLFZvVNy
CpwfEblw/YePS+B87v+NMe5y6+F81cB3Lw53b4Hzy89Z2s/4shPOF98ieI+R
cT+cv+2R85nzNofg/ENZc6Uj3xyB87+q2fKvzT0O5zP9XC0grXoKzjf7n7At
eN0ZOP9Mi8m5Y1rn4Xz5Ca9/rnx3Ac5//f3+vasGl+D8Ja92n+Lruwzn88ku
f//kyRU4vydza9oClWtw/jeH1U8y6q/D+SVGR7aIHb4B599fd6T7ouItOP93
1pXZmlW34XxtR/Z/abvvwPnuixTTN4rfQ4SXbLzSw5j7cL7Om1Du674P4Hxh
/g8cR34h+Cz7Z69XnvMQzs822X2T0/sRnL/aM2nBvm8I/tfXUgLPpj2G87cG
uzNPcXkC59d7tM7f8gzBV7zrdWNx61M438q8ZYqk0TM4P0bu/E/Gywj+11O9
jwoan8P5M1jiSoJUXiDcf2/rIqYjCD5rbWOIZeFLOJ9hZdz6R0Kv4PyiWet7
hQ4h+Hu1OzgE817D+YJeRTpNfG/g/Du6Fy5X7kHwN8yzV3kS9xbOj11vJij7
D8FvaF3YeGfVOzh/7QvZ2Xw+7+F8pRYRD/ZlCP50ee6v//8j+ACgshGH
          "]]}, 
        Annotation[#, "Charting`Private`Tag$116905#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"n(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     Medium, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Exact\"", 
       "\"\\!\\(\\*SubsuperscriptBox[\\(n\\), \\(1\\), \\(TF\\)]\\)(x)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.792239946299518*^9, 3.792240005267642*^9, 
  3.792251156975647*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"d186951a-a196-4169-b169-5b5bcc0de562"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<tf_onepart.eps\>\"", ",", "p3"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.79223995041574*^9, 3.792239951191882*^9}, {
  3.792239985454339*^9, 3.792240027385426*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"b77998f3-0289-4d13-9355-1cb70acc2fbd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p4", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tenparticles", ",", 
      RowBox[{"minDens", "[", "10", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<n(x)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Exact\>\"", ",", 
       "\"\<\!\(\*SubsuperscriptBox[\(n\), \(10\), \(TF\)]\)(x)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Medium"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792239574862278*^9, 3.792239671630007*^9}, {
  3.792239701737854*^9, 3.79223970749979*^9}, {3.792239865778605*^9, 
  3.7922399309617434`*^9}, {3.792251148159275*^9, 3.792251149181058*^9}},
 CellLabel->
  "In[276]:=",ExpressionUUID->"e0d65677-b92a-4f7b-8caa-aa40eaac5c8e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
vR+T/uyAmypLxubnhUC6Hrn3//9v5H/HIw6X
          "]]}, 
        Annotation[#, "Charting`Private`Tag$116357#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQ7ZX64uKBl6F2DGCg4rBA1L+tS7LFHsZv5Nis3ik5
Bc6PiFy4/sPHJXA+9//GGHe59XC+auC7F4e7t8D55ecs7Wd82Qnni28RvMfI
uB/O3/bI+cx5m0Nw/qGsudKRb47A+V/VbPnX5h6H85l+rhaQVj0F55v9T9gW
vO4MnH+mxeTcMa3zcL78hNc/V767AOe//n7/3lWDS3D+kle7T/H1XYbz+WSX
v3/y5Aqc35O5NW2ByjU4/5vD6icZ9dfh/BKjI1vEDt+A8++vO9J9UfEWnP87
68pszarbcL62I/u/tN134Hz3RYrpG8XvIcJLNl7pYcx9OF/nTSj3dd8HcL4w
/weOI78QfJb9s9crz3kI52eb7L7J6f0Izl/tmbRg3zcE/+trKYFn0x7D+VuD
3ZmnuDyB8+s9WudveYbgK971urG49Smcb2XeMkXS6BmcHyN3/ifjZQT/66ne
RwWNz+H8GSxxJUEqLxDuv7d1EdMRBJ+1tjHEsvAlnM+wMm79I6FXcH7RrPW9
QocQ/L3aHRyCea/hfEGvIp0mvjdw/h3dC5cr9yD4G+bZqzyJewvnx643E5T9
h+A3tC5svLPqHZy/9oXsbD6f93C+UouIB/syBH+6PPfX//8RfACSiOg8
          "]]}, 
        Annotation[#, "Charting`Private`Tag$116357#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"n(x)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
     Medium, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{Automatic, Automatic}, {
       Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Exact\"", 
       "\"\\!\\(\\*SubsuperscriptBox[\\(n\\), \\(10\\), \\(TF\\)]\\)(x)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7922396527792387`*^9, 3.792239708043432*^9}, {
   3.792239866877325*^9, 3.792239931575869*^9}, 3.792251150112296*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"88626919-e879-4fa4-8f6e-068a4f342551"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<tf_tenpart.eps\>\"", ",", "p4"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.792240032677827*^9, 3.792240036718026*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"b7ee34be-6e10-4648-ba60-6a3608909b6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"minDens", "[", "1", "]"}], "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7922517015347643`*^9, 3.792251729119882*^9}},
 CellLabel->
  "In[286]:=",ExpressionUUID->"68840bb5-8212-4985-b9d9-281083113f7a"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.792251723661271*^9, 3.792251729529921*^9}},
 CellLabel->
  "Out[286]=",ExpressionUUID->"e1584766-9042-4e8d-a581-0de334b93acb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"minDens", "[", "2", "]"}], "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792251735256002*^9, 3.792251735373941*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"5bd49615-9567-4c53-93a6-02a019518e94"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.792251735638269*^9},
 CellLabel->
  "Out[287]=",ExpressionUUID->"b5ceaeee-e0d0-443d-89e9-ebc0045df755"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"minDens", "[", "3", "]"}], "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792251742082985*^9, 3.792251742215411*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"096c7dc0-72ad-4acd-9585-c1e0efb32cfd"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.792251742688903*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"8171e012-9d34-4770-90ac-de32f9273c9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"wavefuncBox", "[", "1", "]"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792251756844699*^9, 3.7922517664505997`*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"79738f66-509e-4dd0-a971-0cd18e3e1152"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.792251761276638*^9, 3.792251766816304*^9}},
 CellLabel->
  "Out[290]=",ExpressionUUID->"c952128c-71df-4fd7-a7e3-7e31471328fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"wavefuncBox", "[", "1", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "2", "]"}], "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792251810083289*^9, 3.79225181683994*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"2c1e3451-08b1-40b5-a6e4-8713e84e58f5"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.792251817190943*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"1dd34f5e-475a-4a14-9eff-98b4b44c137d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"wavefuncBox", "[", "1", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "2", "]"}], "^", "2"}], "+", 
    RowBox[{
     RowBox[{"wavefuncBox", "[", "3", "]"}], "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792251824984445*^9, 3.792251829620203*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"f5a699d9-0f36-48b0-be64-049362e8d92a"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.7922518302603073`*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"264fa763-944b-4aec-86d5-55ecd921af87"]
}, Open  ]],

Cell["\<\
c) Make a table of the exact and approximate kinetic energies for each N and \
report the
percentage error. Comment on the absolute error and percent error as N grows.\
\
\>", "Text",
 CellChangeTimes->{
  3.792240655024246*^9},ExpressionUUID->"3475ddf9-b992-4ef9-b38c-\
8ec325b1d7d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"exactT", "[", "N_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "12"], "N", 
   RowBox[{"(", 
    RowBox[{"N", "+", "1"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "N"}], "+", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"densExactTF", "[", "N_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "6"], 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["N", "3"], "+", 
     RowBox[{
      FractionBox["9", "8"], 
      SuperscriptBox["N", "2"]}], "+", 
     FractionBox[
      RowBox[{"3", "N"}], "8"]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"approxTF", "[", "N_", "]"}], ":=", 
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "6"], 
   SuperscriptBox["N", "3"]}]}]}], "Input",
 CellChangeTimes->{{3.792238762425581*^9, 3.7922387672983*^9}, {
  3.792239432372525*^9, 3.7922394356507483`*^9}, {3.792240670251185*^9, 
  3.7922407635093803`*^9}, {3.792241062715213*^9, 3.792241065997365*^9}, {
  3.79224120929254*^9, 3.792241274489489*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"38009d93-641a-4515-924b-021d75940689"],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorExAprrox", "[", "particle_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"exactT", "[", "i", "]"}], "//", "N"}], ",", 
      RowBox[{
       RowBox[{"approxTF", "[", "i", "]"}], "//", "N"}], ",", 
      RowBox[{"100.", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"approxTF", "[", "i", "]"}], "-", 
          RowBox[{"exactT", "[", "i", "]"}]}], ")"}], "/", 
        RowBox[{"exactT", "[", "i", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "particle"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792241295539247*^9, 3.7922414460693274`*^9}, {
  3.792250486596402*^9, 3.7922504970731993`*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"d5dde6db-b726-47e4-a2c6-9d29b13d6d77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"errorExAprrox", "[", "15", "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<N\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(T\), \(exact\)]\)\>\"", 
        ",", "\"\<\!\(\*SuperscriptBox[\(T\), \(TF_approxdens\)]\)\>\"", ",", 
        "\"\<Error (%)\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792241347346483*^9, 3.7922413689674263`*^9}, {
  3.792241463940689*^9, 3.792241468350423*^9}, {3.792241506597355*^9, 
  3.792241509495636*^9}, {3.79224154881861*^9, 3.792241603560916*^9}, {
  3.792250459236491*^9, 3.7922504614989023`*^9}, {3.7922505031545067`*^9, 
  3.7922505338926067`*^9}, {3.792250894667883*^9, 3.792250895595491*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"75da4cf1-11bd-4469-a30b-560741bd446e"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"N\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(T\\), \\(exact\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(T\\), \
\\(TF_approxdens\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"Error (%)\"\>",
       HoldForm]},
     {"1", "4.934802200544679`", "1.6449340668482262`", 
      RowBox[{"-", "66.66666666666666`"}]},
     {"2", "24.674011002723397`", "13.15947253478581`", 
      RowBox[{"-", "46.666666666666664`"}]},
     {"3", "69.0872308076255`", "44.41321980490211`", 
      RowBox[{"-", "35.714285714285715`"}]},
     {"4", "148.04406601634037`", "105.27578027828648`", 
      RowBox[{"-", "28.888888888888886`"}]},
     {"5", "271.41412102995736`", "205.61675835602827`", 
      RowBox[{"-", "24.242424242424242`"}]},
     {"6", "449.0670002495658`", "355.3057584392169`", 
      RowBox[{"-", "20.87912087912088`"}]},
     {"7", "690.8723080762551`", "564.2123849289416`", 
      RowBox[{"-", "18.333333333333332`"}]},
     {"8", "1006.6996489111145`", "842.2062422262918`", 
      RowBox[{"-", "16.33986928104575`"}]},
     {"9", "1406.4186271552335`", "1199.156934732357`", 
      RowBox[{"-", "14.736842105263156`"}]},
     {"10", "1899.8988472097014`", "1644.9340668482262`", 
      RowBox[{"-", "13.41991341991342`"}]},
     {"11", "2497.0099134756074`", "2189.4072429749895`", 
      RowBox[{"-", "12.318840579710146`"}]},
     {"12", "3207.6214303540414`", "2842.446067513735`", 
      RowBox[{"-", "11.384615384615385`"}]},
     {"13", "4041.6030022460923`", "3613.9201448655535`", 
      RowBox[{"-", "10.582010582010582`"}]},
     {"14", "5008.824233552849`", "4513.6990794315325`", 
      RowBox[{"-", "9.885057471264368`"}]},
     {"15", "6119.154728675402`", "5551.652475612764`", 
      RowBox[{"-", "9.274193548387096`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"N", "\!\(\*SuperscriptBox[\(T\), \(exact\)]\)", 
       "\!\(\*SuperscriptBox[\(T\), \(TF_approxdens\)]\)", 
       "Error (%)"}}]]]], "Output",
 CellChangeTimes->{{3.792241351318865*^9, 3.792241465544922*^9}, {
   3.792241585649383*^9, 3.792241603825821*^9}, {3.792250500411544*^9, 
   3.79225053424782*^9}, 3.792250895920352*^9},
 CellLabel->
  "Out[273]//TableForm=",ExpressionUUID->"53c80e45-7c67-4536-845c-\
571f66fa763d"]
}, Open  ]],

Cell["\<\
d) Now calculate the TF kinetic energy on the exact densities and add the \
results to the table,
including errors and comment as N grows. What do you conclude is the main \
source of error in
the self-consistent TF calculation?\
\>", "Text",
 CellChangeTimes->{{3.792242393947703*^9, 
  3.7922423975978613`*^9}},ExpressionUUID->"05d8e6e5-d297-4ebb-83b6-\
2d5ef758524d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorExDensTF", "[", "particle_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"exactT", "[", "i", "]"}], "//", "N"}], ",", 
      RowBox[{
       RowBox[{"densExactTF", "[", "i", "]"}], "//", "N"}], ",", 
      RowBox[{"100.", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"densExactTF", "[", "i", "]"}], "-", 
          RowBox[{"exactT", "[", "i", "]"}]}], ")"}], "/", 
        RowBox[{"exactT", "[", "i", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "particle"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.792242371918974*^9, 3.7922424767080936`*^9}, {
  3.792242618180667*^9, 3.792242623908944*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"9b54543e-c261-415f-9e10-a987cbcf208f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"errorExDensTF", "[", "15", "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<N\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(T\), \(exact\)]\)\>\"", 
        ",", "\"\<\!\(\*SuperscriptBox[\(T\), \(TF_exactdens\)]\)\>\"", ",", 
        "\"\<Error (%)\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792242455544589*^9, 3.7922425417521267`*^9}, {
  3.792250316454338*^9, 3.792250318358903*^9}, {3.792250452325445*^9, 
  3.7922504531880302`*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"0ca81660-c028-496a-a6e5-ed4d8b1e9215"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"N\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(T\\), \\(exact\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(T\\), \\(TF_exactdens\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"Error (%)\"\>",
       HoldForm]},
     {"1", "4.934802200544679`", "4.112335167120566`", 
      RowBox[{"-", "16.666666666666664`"}]},
     {"2", "24.674011002723397`", "21.795376385739`", 
      RowBox[{"-", "11.666666666666666`"}]},
     {"3", "69.0872308076255`", "62.91872805694466`", 
      RowBox[{"-", "8.928571428571429`"}]},
     {"4", "148.04406601634037`", "137.3519945818269`", 
      RowBox[{"-", "7.222222222222221`"}]},
     {"5", "271.41412102995736`", "254.96478036147508`", 
      RowBox[{"-", "6.0606060606060606`"}]},
     {"6", "449.0670002495658`", "425.62668979697855`", 
      RowBox[{"-", "5.21978021978022`"}]},
     {"7", "690.8723080762551`", "659.2073272894268`", 
      RowBox[{"-", "4.583333333333333`"}]},
     {"8", "1006.6996489111145`", "965.5762972399089`", 
      RowBox[{"-", "4.084967320261438`"}]},
     {"9", "1406.4186271552335`", "1354.6032040495145`", 
      RowBox[{"-", "3.684210526315789`"}]},
     {"10", "1899.8988472097014`", "1836.1576521193326`", 
      RowBox[{"-", "3.354978354978355`"}]},
     {"11", "2497.0099134756074`", "2420.109245850453`", 
      RowBox[{"-", "3.0797101449275366`"}]},
     {"12", "3207.6214303540414`", "3116.327589643965`", 
      RowBox[{"-", "2.8461538461538463`"}]},
     {"13", "4041.6030022460923`", "3934.6822879009574`", 
      RowBox[{"-", "2.6455026455026456`"}]},
     {"14", "5008.824233552849`", "4885.04294502252`", 
      RowBox[{"-", "2.471264367816092`"}]},
     {"15", "6119.154728675402`", "5977.279165409743`", 
      RowBox[{"-", "2.318548387096774`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"N", "\!\(\*SuperscriptBox[\(T\), \(exact\)]\)", 
       "\!\(\*SuperscriptBox[\(T\), \(TF_exactdens\)]\)", 
       "Error (%)"}}]]]], "Output",
 CellChangeTimes->{{3.7922424636537*^9, 3.792242485780754*^9}, {
   3.792242530339163*^9, 3.792242542263221*^9}, {3.792242620654089*^9, 
   3.7922426269407682`*^9}, 3.7922503187292633`*^9, 3.79225045344451*^9},
 CellLabel->
  "Out[268]//TableForm=",ExpressionUUID->"12aa7972-7768-4432-a47e-\
dd3ca513bf3f"]
}, Open  ]],

Cell["\<\
e) Remake your table to report eigenvalues, by calculating the difference \
between having N
and N \[Minus] 1 particles in the box, and calculate errors for both \
self-consistent TF and TF on exact
densities.\
\>", "Text",
 CellChangeTimes->{
  3.792243156699505*^9},ExpressionUUID->"ce6fd5d8-a96f-4733-a18e-\
5c4b52ed7bb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scfTF", "[", "N_", "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[Pi]", "2"], 
    SuperscriptBox["N", "3"]}], "6"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scfdiffTF", "[", "N_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"scfTF", "[", "N", "]"}], "-", 
    RowBox[{"scfTF", "[", 
     RowBox[{"N", "-", "1"}], "]"}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffdensExTF", "[", "N_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"densExactTF", "[", "N", "]"}], "-", 
    RowBox[{"densExactTF", "[", 
     RowBox[{"N", "-", "1"}], "]"}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diffexactT", "[", "N_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"exactT", "[", "N", "]"}], "-", 
    RowBox[{"exactT", "[", 
     RowBox[{"N", "-", "1"}], "]"}]}], "//", "FullSimplify"}]}]}], "Input",
 CellChangeTimes->{{3.792243160009777*^9, 3.7922431815094976`*^9}, {
  3.792243410744034*^9, 3.792243436323732*^9}, {3.792243485219864*^9, 
  3.792243485853854*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"b30edf64-f2df-477d-8359-1f9c624d478b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"erroreigN", "[", "particle_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["\[Epsilon]", 
       RowBox[{
        RowBox[{"i", "-", "1"}], ",", "i"}]], ",", 
      RowBox[{
       RowBox[{"diffexactT", "[", "i", "]"}], "//", "N"}], ",", 
      RowBox[{
       RowBox[{"scfdiffTF", "[", "i", "]"}], "//", "N"}], ",", 
      RowBox[{"100.", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"scfdiffTF", "[", "i", "]"}], "-", 
          RowBox[{"diffexactT", "[", "i", "]"}]}], ")"}], "/", 
        RowBox[{"diffexactT", "[", "i", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"diffdensExTF", "[", "i", "]"}], "//", "N"}], ",", 
      RowBox[{"100.", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"diffdensExTF", "[", "i", "]"}], "-", 
          RowBox[{"diffexactT", "[", "i", "]"}]}], ")"}], "/", 
        RowBox[{"diffexactT", "[", "i", "]"}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "2", ",", "particle"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7922434708854733`*^9, 3.792243558797819*^9}, {
  3.7922436544499283`*^9, 3.7922436548380327`*^9}, {3.792243814838531*^9, 
  3.792243836165279*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"e0024273-dc66-4398-8a05-d9efa1bdb4ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"erroreigN", "[", "15", "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(N - 1, N\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[\(T\), \(exact\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[\(T\), \(TF, scf\)]\)\>\"", ",", 
        "\"\<Error (%)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[\(T\), \(TF_exactdens\)]\)\>\"", ",", 
        "\"\<Error (%)\>\""}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.79224356086049*^9, 3.792243583161725*^9}, {
  3.7922436593451653`*^9, 3.792243660049097*^9}, {3.792243692098076*^9, 
  3.7922437539765253`*^9}, {3.792243847427911*^9, 3.7922438621001577`*^9}, {
  3.792244856340294*^9, 3.792244857321216*^9}, {3.792250159582168*^9, 
  3.792250160516437*^9}, {3.7922503108491497`*^9, 3.792250311261611*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"0d4b5249-8851-488f-bc79-e6d643b8ccbf"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(N - 1, \
N\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(T\\), \\(exact\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(T\\), \\(TF, scf\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"Error (%)\"\>",
       HoldForm], 
      TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(T\\), \\(TF_exactdens\\)]\\)\"\>",
       HoldForm], 
      TagBox["\<\"Error (%)\"\>",
       HoldForm]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"1", ",", "2"}]], "19.739208802178716`", "11.514538467937586`", 
      RowBox[{"-", "41.66666666666667`"}], "17.683041218618435`", 
      RowBox[{"-", "10.416666666666668`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"2", ",", "3"}]], "44.41321980490211`", "31.2537472701163`", 
      RowBox[{"-", "29.629629629629626`"}], "41.12335167120566`", 
      RowBox[{"-", "7.4074074074074066`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"3", ",", "4"}]], "78.95683520871486`", "60.86256047338438`", 
      RowBox[{"-", "22.916666666666664`"}], "74.43326652488224`", 
      RowBox[{"-", "5.729166666666666`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"4", ",", "5"}]], "123.37005501361698`", "100.3409780777418`", 
      
      RowBox[{"-", "18.666666666666668`"}], "117.61278577964818`", 
      RowBox[{"-", "4.666666666666667`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"5", ",", "6"}]], "177.65287921960845`", "149.6890000831886`", 
      
      RowBox[{"-", "15.74074074074074`"}], "170.6619094355035`", 
      RowBox[{"-", "3.935185185185185`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"6", ",", "7"}]], "241.80530782668927`", "208.90662648972474`", 
      RowBox[{"-", "13.60544217687075`"}], "233.58063749244815`", 
      RowBox[{"-", "3.4013605442176873`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"7", ",", "8"}]], "315.82734083485946`", "277.99385729735025`", 
      RowBox[{"-", "11.979166666666668`"}], "306.36896995048215`", 
      RowBox[{"-", "2.994791666666667`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"8", ",", "9"}]], "399.718978244119`", "356.9506925060651`", 
      RowBox[{"-", "10.699588477366255`"}], "389.0269068096055`", 
      RowBox[{"-", "2.674897119341564`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"9", ",", "10"}]], "493.4802200544679`", "445.77713211586934`", 
      RowBox[{"-", "9.666666666666666`"}], "481.55444806981825`", 
      RowBox[{"-", "2.4166666666666665`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"10", ",", "11"}]], "597.1110662659062`", "544.4731761267628`", 
      RowBox[{"-", "8.81542699724518`"}], "583.9515937311203`", 
      RowBox[{"-", "2.203856749311295`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"11", ",", "12"}]], "710.6115168784338`", "653.0388245387459`", 
      RowBox[{"-", "8.101851851851851`"}], "696.2183437935118`", 
      RowBox[{"-", "2.025462962962963`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"12", ",", "13"}]], "833.9815718920507`", "771.4740773518182`", 
      RowBox[{"-", "7.495069033530571`"}], "818.3546982569926`", 
      RowBox[{"-", "1.8737672583826428`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"13", ",", "14"}]], "967.2212313067571`", "899.7789345659799`", 
      RowBox[{"-", "6.972789115646258`"}], "950.3606571215628`", 
      RowBox[{"-", "1.7431972789115644`"}]},
     {
      SubscriptBox["\[Epsilon]", 
       RowBox[{"14", ",", "15"}]], "1110.3304951225527`", 
      "1037.9533961812308`", 
      RowBox[{"-", "6.518518518518518`"}], "1092.2362203872224`", 
      RowBox[{"-", "1.6296296296296295`"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     None, {"\!\(\*SubscriptBox[\(\[Epsilon]\), \(N - 1, N\)]\)", 
       "\!\(\*SuperscriptBox[\(T\), \(exact\)]\)", 
       "\!\(\*SuperscriptBox[\(T\), \(TF, scf\)]\)", "Error (%)", 
       "\!\(\*SuperscriptBox[\(T\), \(TF_exactdens\)]\)", 
       "Error (%)"}}]]]], "Output",
 CellChangeTimes->{{3.792243742073216*^9, 3.792243754499074*^9}, {
   3.79224384064375*^9, 3.79224386266997*^9}, 3.792244859217057*^9, 
   3.792250161101535*^9, 3.7922503116239862`*^9},
 CellLabel->
  "Out[266]//TableForm=",ExpressionUUID->"0d6d85fc-946c-4d4a-a043-\
d2a96e78a2e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[Pi]", "2"], "N", " ", 
   RowBox[{"(", 
    RowBox[{"N", "+", "1"}], ")"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "N"}], "+", "1"}], ")"}], "/", "12"}]}], "//", 
  "Expand"}]], "Input",
 CellChangeTimes->{{3.792244617072514*^9, 3.792244656248638*^9}, {
  3.792244694128709*^9, 3.792244695878071*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"aafc4ee8-6712-43fb-87af-c56dac178334"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"N", " ", 
    SuperscriptBox["\[Pi]", "2"]}], "12"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["N", "2"], " ", 
    SuperscriptBox["\[Pi]", "2"]}], "4"], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["N", "3"], " ", 
    SuperscriptBox["\[Pi]", "2"]}], "6"]}]], "Output",
 CellChangeTimes->{{3.792244619828537*^9, 3.792244626455276*^9}, 
   3.792244656790801*^9, 3.792244696479188*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"037d17e9-292f-453c-9e29-3ec212f54c61"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Harmonic Oscillators in DFT",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.792246039095339*^9, 
  3.792246044081725*^9}},ExpressionUUID->"9d5b6aa3-59f6-4fd0-b172-\
12f7edf6fec7"],

Cell["\<\
a) For the harmonic oscillator v(x) = x^2 /2, write the formula for the TF \
density in terms of
\[Mu].\
\>", "Text",
 CellChangeTimes->{{3.792246050196185*^9, 
  3.7922460541626863`*^9}},ExpressionUUID->"9b675d9c-991f-4a27-8ed5-\
497f65e3058a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Sqrt", "[", 
     RowBox[{"2", "*", 
      RowBox[{"(", 
       RowBox[{"\[Mu]", "-", 
        FractionBox[
         SuperscriptBox["x", "2"], "2"]}], ")"}]}], "]"}], "\[Pi]"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "\[Mu]"}], "]"}]}], ",", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"2", "\[Mu]"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.792246069086987*^9, 3.7922461478195868`*^9}},
 CellLabel->
  "In[171]:=",ExpressionUUID->"a1fdfdb7-66d1-4638-aa96-f21af2377c64"],

Cell[BoxData["\[Mu]"], "Output",
 CellChangeTimes->{3.792246150469264*^9},
 CellLabel->
  "Out[171]=",ExpressionUUID->"b0915968-9485-40fd-b6fd-722224ea2698"]
}, Open  ]],

Cell["\<\
b) By doing the integral between the turning points, find a formula for N as \
a function of \[Mu].
\[Mu] = N\
\>", "Text",
 CellChangeTimes->{{3.792246256601996*^9, 
  3.792246270050695*^9}},ExpressionUUID->"ffb4c0e2-eeab-411f-a84f-\
186c46c8dc59"],

Cell["c) Get formulas for T_N and E_N .", "Text",
 CellChangeTimes->{{3.792246460740097*^9, 
  3.792246466624689*^9}},ExpressionUUID->"5415d0de-e6d2-424a-b0a6-\
528d35515afc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox["\[Pi]", "2"], "6"], 
   RowBox[{"Integrate", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"n", "-", 
            FractionBox[
             SuperscriptBox["x", "2"], "2"]}], ")"}]}], "]"}], "\[Pi]"], 
       ")"}], "3"], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "n"}], "]"}]}], ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "n"}], "]"}]}], "}"}]}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.792246497958778*^9, 3.792246519534075*^9}, {
  3.792246569431985*^9, 3.792246601275934*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"9f14bb5d-06ed-491a-92c3-8bf840b7b3e9"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["n", "2"], "4"]], "Output",
 CellChangeTimes->{{3.792246514643572*^9, 3.7922465199644327`*^9}, {
  3.792246595612479*^9, 3.7922466043841133`*^9}},
 CellLabel->
  "Out[175]=",ExpressionUUID->"777382b0-9229-4475-8cf1-fa11b25bae74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox["x", "2"], 
     FractionBox[
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"n", "-", 
          FractionBox[
           SuperscriptBox["x", "2"], "2"]}], ")"}]}], "]"}], "\[Pi]"]}], ",", 
    
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "n"}], "]"}]}], ",", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"2", "n"}], "]"}]}], "}"}]}], "]"}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.792246900382172*^9, 3.792246933265223*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"a976e51a-4dda-44dd-92fe-67d9f9ea26cd"],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["n", "2"], "4"]], "Output",
 CellChangeTimes->{3.7922469369701157`*^9},
 CellLabel->
  "Out[176]=",ExpressionUUID->"049e9466-a3be-4124-9209-891cf9caaf98"]
}, Open  ]],

Cell["\<\
d) By subtracting N \[Minus] 1 from N , deduce a formula for the N -th energy \
level. What is its
error?\
\>", "Text",
 CellChangeTimes->{
  3.7922468465218153`*^9},ExpressionUUID->"6f75772e-e34c-466c-b31f-\
cc4e4c21a6d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox["n", "2"], "2"], "-", 
   FractionBox[
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}], "2"], "2"]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.792250936977009*^9, 3.7922509516326933`*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"ff8ef36d-c9ad-4ec4-a6d5-b4bb31792b12"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], "+", "n"}]], "Output",
 CellChangeTimes->{3.792250951981885*^9},
 CellLabel->
  "Out[275]=",ExpressionUUID->"a227a23e-cee5-4871-8472-7065a37a3689"]
}, Open  ]],

Cell["\<\
e) For N = 1, 2, 3, plot both the exact and the approximate densities of the \
harmonic well.
Why would the phrase \[CloseCurlyDoubleQuote]getting the right answer for the \
wrong reason\[CloseCurlyDoubleQuote] come to mind?\
\>", "Text",
 CellChangeTimes->{
  3.792248350950733*^9},ExpressionUUID->"c7a529d2-32ee-41ed-bcb8-\
fa056d39170a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"densHO", "[", 
   RowBox[{"n_", ",", "x_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"Sqrt", "[", 
    RowBox[{"2", "*", 
     RowBox[{"(", 
      RowBox[{"n", "-", 
       FractionBox[
        SuperscriptBox["x", "2"], "2"]}], ")"}]}], "]"}], 
   "\[Pi]"]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exactHOgs", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"1", "/", "4"}]]], 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "/", "2"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exactHOex1", "[", "x_", "]"}], ":=", 
  RowBox[{
   FractionBox["1", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"1", "/", "4"}]]], 
   RowBox[{"Sqrt", "[", "2", "]"}], "x", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "/", "2"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exactHOex2", "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "/", "2"}], "]"}], 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", 
       SuperscriptBox["x", "2"]}], "-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"Sqrt", "[", "2", "]"}], 
     SuperscriptBox["\[Pi]", 
      RowBox[{"1", "/", "4"}]]}]]}]}]}], "Input",
 CellChangeTimes->{{3.792247680248824*^9, 3.792247719255496*^9}, {
  3.792247771275528*^9, 3.792247836708992*^9}, {3.792247944940815*^9, 
  3.792247948221325*^9}, {3.792248010475502*^9, 3.792248010816093*^9}, {
  3.792248188155086*^9, 3.792248229953174*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"0c3048be-789f-4901-ab03-aff262abb905"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ho1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"exactHOgs", "[", "x", "]"}], "2"], ",", 
      RowBox[{"densHO", "[", 
       RowBox[{"1", ",", "x"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<n(x)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Exact\>\"", ",", "18"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubsuperscriptBox[\(n\), \(1\), \(TF\)]\)(x)\>\"", ",", 
           "18"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.88", ",", "0.88"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Medium"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.8"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.79224801651539*^9, 3.792248049703794*^9}, {
  3.792248080425097*^9, 3.792248084010673*^9}, {3.7922482721646748`*^9, 
  3.79224827329834*^9}, {3.792248391693997*^9, 3.7922484080377083`*^9}, {
  3.792248511437096*^9, 3.7922485252485323`*^9}, {3.7922485729865923`*^9, 
  3.792248607173637*^9}, {3.792249278472159*^9, 3.792249282478531*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"6b0b0116-8493-4253-9d46-11079994269b"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$96480#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1: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
87mqiPAEBkyc6WmLf3QT/gc1dSHL
         "]]},
       Annotation[#, "Charting`Private`Tag$96480#2"]& ]}, {}}, InsetBox[
     TemplateBox[{
      StyleBox["\"Exact\"", 18, StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubsuperscriptBox[\\(n\\), \\(1\\), \\(TF\\)]\\)(x)\"", 18,
         StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.88, 0.88}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"x\"", TraditionalForm], 
     FormBox["\"n(x)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Medium,
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-2.9999998775510206`, 2.9999998775510206`}, {0, 0.8}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
           "]]}, 
         "Charting`Private`Tag$96480#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
87mqiPAEBkyc6WmLf3QT/gc1dSHL
           "]]}, 
         "Charting`Private`Tag$96480#2"]}}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"x", "n(x)"}, AxesOrigin -> {0, 0}, 
      AxesStyle -> Medium, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-2.9999998775510206`, 2.9999998775510206`}, {0, 0.8}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Style["Exact", 18], 
        Style["\!\(\*SubsuperscriptBox[\(n\), \(1\), \(TF\)]\)(x)", 18]}, 
       LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
     0.88, 0.88}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.792248044088851*^9, 3.7922480501126127`*^9}, 
   3.792248084677462*^9, 3.79224827365209*^9, {3.7922483927082853`*^9, 
   3.792248408590788*^9}, 3.7922485260736322`*^9, {3.7922485750194387`*^9, 
   3.792248607779064*^9}, 3.7922487773710327`*^9, 3.792249283347391*^9},
 CellLabel->
  "Out[251]=",ExpressionUUID->"19db8db1-97e4-4874-ba32-a3dba33caff1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ho1_compare.eps\>\"", ",", "ho1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.792248092053976*^9, 3.792248108064774*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"e8946500-9aa4-43dc-be93-782ac1735613"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ho2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"exactHOgs", "[", "x", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"exactHOex1", "[", "x", "]"}], "2"]}], ",", 
      RowBox[{"densHO", "[", 
       RowBox[{"2", ",", "x"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<n(x)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Exact\>\"", ",", "18"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubsuperscriptBox[\(n\), \(2\), \(TF\)]\)(x)\>\"", ",", 
           "18"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.88", ",", "0.88"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Medium"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0.85"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.79224806714012*^9, 3.792248088992408*^9}, {
  3.792248266640733*^9, 3.792248281016267*^9}, {3.792248416918795*^9, 
  3.792248420600939*^9}, {3.792248540637094*^9, 3.792248564731125*^9}, {
  3.7922486236894197`*^9, 3.792248632346826*^9}, {3.792248731537438*^9, 
  3.7922487651738358`*^9}, {3.792249125546137*^9, 3.792249131109359*^9}, {
  3.792249168198847*^9, 3.7922492649447412`*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"dfd3f887-1cf1-415e-be76-75f7d981f20a"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1: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
         "]]},
       Annotation[#, "Charting`Private`Tag$96229#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1: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
wbN+5Cy1+FFkLw5cj/tYoxN6UXJT0krKERzWaOscvz16UcU2kedOgjhM+Anw
XDHsRcLF4tnyR3HIiLz73wZPLzJT1sW6/sNBMZ9OwTS6B1GwiO8/juNgNyvm
KPSmGwXTlUkOniT246jl4uXUjf7c/jcQKo7DmRU3j6Eb3YiT/oiAyikcqPR1
fkHs3UhYdTH2kwQOkfwGSb+CuxDljew5x9M4eGazJDvs6kRqbk/O5crgcPWr
zieB9g500jT1wM3zOHA3vf/aHdSBxsUXPi4RziSd6znL1IESNIyyTsrh0Mdr
tZ1K/w1ZlEm5xijgIBpQbhO61ooYKG5nRC/gMGhtL5qHNaIxcy1O9Ws4VI3f
lC5Ja0Qqg3rUcsJpumcvVdo1otzl7UhEDQeXK1STtt8NiKE7oWrbdRz2iIW9
maXUo9ojXV9S1Yn9/StaE+CuQ0xp3zLybuIgYR/LcHywFiUNfZpl1cSBZ/op
p3h8LTptprZ5m/DMgIqY/OFaJDm5mcarhYNP2aCZvlgN+u6ObXe+hcOj7ash
RwKrkIqF5Y9ZHRwuraD0U7urUEbBVqCkLg6cswE1ClGVyD9cht6DcG4r34pB
cgUSfFblyqhHvP+NonH41zIk9cfAmVsfh88vGF3fQxlqEr3Qok3Y51HX69yG
r6gj/fhaBGEBA8u61u4vyN9l7yi7AQ76h/1Et8+XoDSjxBIyYSHOG5c4nErQ
vQORTScNcVjezmMqQC5GUpTBPCvCb2Yz38jRFyPVSsed7YRbc7+tPeQrQhqR
39pDjXCIfR/N6fO+EEXRn4irIHw73EwsTKgQmWbwKcwR3u76xyxHqgBtTXSw
gjHxfXuIhrZE5SLb8lsNY4Q1fi0N5KV9Qlrr0vF0JsR+LEsFoktz0PWCu1pH
CfdfvVRgOZyFpI702NsQzqlk2bgyn4k4PnF0viT8UrL7wilKBvppWMydSvg0
r2kf5WA6Mq2VvzZGmCXkv0Okk2mIbUREdpUwiW7BplnxI/rXGbKLw5Q43w+3
1UjzVCTE0WaqTNjWWFHpiXMKOqWSM6ZHWKlrR6CFTzL6Lcyt6EB44v7Rs8ZX
kpBwl292JOEQvfxG4bvv0B3G6NI0wvKgoL8SnIB+9Z9PLyW8INQ6V/MpDglv
c/FoIhzPrvcktDMG/RNQlRwgfJWMsRn9iUJR8cVtGOG1cafE41yRqC2r5uoS
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
LBC2
         "]]},
       Annotation[#, "Charting`Private`Tag$96229#2"]& ]}, {}}, InsetBox[
     TemplateBox[{
      StyleBox["\"Exact\"", 18, StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubsuperscriptBox[\\(n\\), \\(2\\), \\(TF\\)]\\)(x)\"", 18,
         StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.88, 0.88}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"x\"", TraditionalForm], 
     FormBox["\"n(x)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   AxesStyle->Medium,
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{-2.9999998775510206`, 2.9999998775510206`}, {0, 0.85}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
           "]]}, 
         "Charting`Private`Tag$96229#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
wbN+5Cy1+FFkLw5cj/tYoxN6UXJT0krKERzWaOscvz16UcU2kedOgjhM+Anw
XDHsRcLF4tnyR3HIiLz73wZPLzJT1sW6/sNBMZ9OwTS6B1GwiO8/juNgNyvm
KPSmGwXTlUkOniT246jl4uXUjf7c/jcQKo7DmRU3j6Eb3YiT/oiAyikcqPR1
fkHs3UhYdTH2kwQOkfwGSb+CuxDljew5x9M4eGazJDvs6kRqbk/O5crgcPWr
zieB9g500jT1wM3zOHA3vf/aHdSBxsUXPi4RziSd6znL1IESNIyyTsrh0Mdr
tZ1K/w1ZlEm5xijgIBpQbhO61ooYKG5nRC/gMGhtL5qHNaIxcy1O9Ws4VI3f
lC5Ja0Qqg3rUcsJpumcvVdo1otzl7UhEDQeXK1STtt8NiKE7oWrbdRz2iIW9
maXUo9ojXV9S1Yn9/StaE+CuQ0xp3zLybuIgYR/LcHywFiUNfZpl1cSBZ/op
p3h8LTptprZ5m/DMgIqY/OFaJDm5mcarhYNP2aCZvlgN+u6ObXe+hcOj7ash
RwKrkIqF5Y9ZHRwuraD0U7urUEbBVqCkLg6cswE1ClGVyD9cht6DcG4r34pB
cgUSfFblyqhHvP+NonH41zIk9cfAmVsfh88vGF3fQxlqEr3Qok3Y51HX69yG
r6gj/fhaBGEBA8u61u4vyN9l7yi7AQ76h/1Et8+XoDSjxBIyYSHOG5c4nErQ
vQORTScNcVjezmMqQC5GUpTBPCvCb2Yz38jRFyPVSsed7YRbc7+tPeQrQhqR
39pDjXCIfR/N6fO+EEXRn4irIHw73EwsTKgQmWbwKcwR3u76xyxHqgBtTXSw
gjHxfXuIhrZE5SLb8lsNY4Q1fi0N5KV9Qlrr0vF0JsR+LEsFoktz0PWCu1pH
CfdfvVRgOZyFpI702NsQzqlk2bgyn4k4PnF0viT8UrL7wilKBvppWMydSvg0
r2kf5WA6Mq2VvzZGmCXkv0Okk2mIbUREdpUwiW7BplnxI/rXGbKLw5Q43w+3
1UjzVCTE0WaqTNjWWFHpiXMKOqWSM6ZHWKlrR6CFTzL6Lcyt6EB44v7Rs8ZX
kpBwl292JOEQvfxG4bvv0B3G6NI0wvKgoL8SnIB+9Z9PLyW8INQ6V/MpDglv
c/FoIhzPrvcktDMG/RNQlRwgfJWMsRn9iUJR8cVtGOG1cafE41yRqC2r5uoS
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
LBC2
           "]]}, "Charting`Private`Tag$96229#2"]}}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"x", "n(x)"}, AxesOrigin -> {0, 0}, 
      AxesStyle -> Medium, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{-2.9999998775510206`, 2.9999998775510206`}, {0, 0.85}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Style["Exact", 18], 
        Style["\!\(\*SubsuperscriptBox[\(n\), \(2\), \(TF\)]\)(x)", 18]}, 
       LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
     0.88, 0.88}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.7922480706263742`*^9, 3.792248089425411*^9}, {
   3.7922482686214857`*^9, 3.7922482815438137`*^9}, {3.792248422129499*^9, 
   3.792248449576885*^9}, {3.7922485443136377`*^9, 3.792248565030468*^9}, 
   3.7922486327897463`*^9, {3.792248733071124*^9, 3.792248765651486*^9}, {
   3.792249126897882*^9, 3.792249131585808*^9}, {3.792249183825982*^9, 
   3.792249265462884*^9}},
 CellLabel->
  "Out[250]=",ExpressionUUID->"f3302dc7-12c6-4560-89be-1380034badaf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ho2_compare.eps\>\"", ",", "ho2"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.792248114199403*^9, 3.7922481162394953`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"f89f2c6d-aa76-49d7-8ca9-af802b18b3ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ho3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"exactHOgs", "[", "x", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"exactHOex1", "[", "x", "]"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"exactHOex2", "[", "x", "]"}], "2"]}], ",", 
      RowBox[{"densHO", "[", 
       RowBox[{"3", ",", "x"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<n(x)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Exact\>\"", ",", "18"}], "]"}], ",", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<\!\(\*SubsuperscriptBox[\(n\), \(3\), \(TF\)]\)(x)\>\"", ",", 
           "18"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.88", ",", "0.88"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"AxesStyle", "\[Rule]", "Medium"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7922482341062937`*^9, 3.792248250003593*^9}, {
  3.792248433201839*^9, 3.792248445719019*^9}, {3.79224855075485*^9, 
  3.792248558924671*^9}, {3.792248742806197*^9, 3.792248746938697*^9}, {
  3.7922492914183893`*^9, 3.792249293772691*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"e85d1481-f095-46ea-bd01-4c5770fd7cc9"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1: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

         "]]},
       Annotation[#, "Charting`Private`Tag$97022#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], Thickness[Large], Opacity[1.],
         LineBox[CompressedData["
1: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
uFkL+O2hZcE0/Rk2iyzSbd9wC/4Hg4/AhA==
         "]]},
       Annotation[#, "Charting`Private`Tag$97022#2"]& ]}, {}}, InsetBox[
     TemplateBox[{
      StyleBox["\"Exact\"", 18, StripOnInput -> False],StyleBox[
       "\"\\!\\(\\*SubsuperscriptBox[\\(n\\), \\(3\\), \\(TF\\)]\\)(x)\"", 18,
         StripOnInput -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.88, 0.88}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"x\"", TraditionalForm], 
     FormBox["\"n(x)\"", TraditionalForm]},
   AxesOrigin->{0, Automatic},
   AxesStyle->Medium,
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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

           "]]}, "Charting`Private`Tag$97022#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6], 
           Thickness[Large]], 
          Line[CompressedData["
1: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
uFkL+O2hZcE0/Rk2iyzSbd9wC/4Hg4/AhA==
           "]]}, 
         "Charting`Private`Tag$97022#2"]}}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, Automatic}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"x", "n(x)"}, AxesOrigin -> {0, 0}, 
      AxesStyle -> Medium, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{Automatic, Automatic}, {
        Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6], 
         Thickness[Large]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6], 
         Thickness[Large]]}, {
        Style["Exact", 18], 
        Style["\!\(\*SubsuperscriptBox[\(n\), \(3\), \(TF\)]\)(x)", 18]}, 
       LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
     0.88, 0.88}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.792248243634776*^9, 3.792248250398653*^9}, 
   3.79224828486045*^9, {3.792248434782793*^9, 3.792248446140091*^9}, {
   3.7922485542200336`*^9, 3.792248559270763*^9}, {3.7922487438397617`*^9, 
   3.792248771108653*^9}, 3.792249294307806*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"fc73369e-4c63-411e-b1cd-64f883c4431d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<ho3_compare.eps\>\"", ",", "ho3"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7922482917309628`*^9, 3.792248294465438*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"9acee978-2ace-47b6-adfa-e02ea9309b9b"],

Cell[TextData[{
 "f) Calculate the integral of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "54106b9d-d31b-4c9c-8b67-4b76e679cdbc"],
 "(x) for N = 1, 2, 3 both exactly and approximately and comment\non trends \
of errors with N ."
}], "Text",
 CellChangeTimes->{
  3.7922493842393837`*^9, {3.79224945129751*^9, 
   3.792249453237039*^9}},ExpressionUUID->"15b517a7-d40f-4274-a6ba-\
0bfb87323ada"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"densHO", "[", 
    RowBox[{"1", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
     RowBox[{"Sqrt", "[", "2", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.79224947062999*^9, 3.7922495178682404`*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"d925cc44-a43a-4d27-8595-ca3cac231466"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.792249499945303*^9, 3.7922495192631397`*^9}},
 CellLabel->
  "Out[256]=",ExpressionUUID->"a3343157-f3f1-4bd1-a4b8-493c75219fbf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"densHO", "[", 
     RowBox[{"2", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", "4", "]"}]}], ",", 
      RowBox[{"Sqrt", "[", "4", "]"}]}], "}"}]}], "]"}], "//", "N"}]], "Input",\

 CellChangeTimes->{{3.792249524502965*^9, 3.792249540495843*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"19d37f95-666c-4e9a-91f8-306aea2f9850"],

Cell[BoxData["2.`"], "Output",
 CellChangeTimes->{{3.792249525219998*^9, 3.792249541627289*^9}},
 CellLabel->
  "Out[259]=",ExpressionUUID->"18813d63-fdca-4bf1-9335-2d45562df051"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"densHO", "[", 
     RowBox[{"3", ",", "x"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", 
       RowBox[{"Sqrt", "[", "6", "]"}]}], ",", 
      RowBox[{"Sqrt", "[", "6", "]"}]}], "}"}]}], "]"}], "//", "N"}]], "Input",\

 CellChangeTimes->{{3.792249533532736*^9, 3.792249546077091*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"e48a6117-73b6-4b80-b484-49bb72d94e87"],

Cell[BoxData["3.`"], "Output",
 CellChangeTimes->{3.792249548027041*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"4c261307-1930-47c2-acbc-9c21ebd172e2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"exactHOgs", "[", "x", "]"}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7922495604442663`*^9, 3.792249567511676*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"75c03771-b9cb-4dfa-997f-4d8bbf6987c5"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.792249567971751*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"d141c2f0-21bd-4a0d-8518-164b40b8c130"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"exactHOgs", "[", "x", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"exactHOex1", "[", "x", "]"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7922495859836273`*^9, 3.7922495973285646`*^9}},
 CellLabel->
  "In[262]:=",ExpressionUUID->"9c15fb07-08e3-4063-be0e-56faffe2db9a"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7922495978164587`*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"c1a7b556-b2fd-49fa-ba36-5eeaa9776c47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"exactHOgs", "[", "x", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"exactHOex1", "[", "x", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"exactHOex2", "[", "x", "]"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7922496027511597`*^9, 3.792249611800598*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"85126530-fbf3-48aa-b7eb-a1efb14c7de3"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.792249608773285*^9, 3.792249612499626*^9}},
 CellLabel->
  "Out[264]=",ExpressionUUID->"ba233684-7b5c-41ed-b445-a04b0b4ca34f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Morse Oscillators in DFT",
 FontWeight->"Bold"]], "Subsubsection",
 CellChangeTimes->{{3.792251241494326*^9, 
  3.792251244965233*^9}},ExpressionUUID->"5fa9634f-4edd-4eb5-a6ef-\
7eef4fa9aa22"],

Cell["\<\
a) For the Morse potential given for the diatomics problem where y = N/\
\[Alpha]. Deduce a formula
for individual eigenvalues.\
\>", "Text",
 CellChangeTimes->{{3.792251252679915*^9, 
  3.792251271885562*^9}},ExpressionUUID->"c3f47992-aa26-4d89-9b71-\
bb226a683ad7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"morseTF", "[", 
   RowBox[{"n_", ",", "y_", ",", "v0_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "n"}], " ", "v0", 
   RowBox[{"(", 
    RowBox[{"1", "-", "y", "+", 
     RowBox[{
      SuperscriptBox["y", "2"], "/", "3"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.792251275875415*^9, 3.7922513255108967`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"96bc4fce-85d3-4f56-a9b8-5cbdac39e392"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"morseTF", "[", 
    RowBox[{"n", ",", 
     RowBox[{"n", "/", "\[Alpha]"}], ",", "v0"}], "]"}], "-", 
   RowBox[{"morseTF", "[", 
    RowBox[{
     RowBox[{"n", "-", "1"}], ",", 
     RowBox[{"n", "/", "\[Alpha]"}], ",", "v0"}], "]"}]}], "//", 
  "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.792261749547172*^9, 3.792261750276073*^9}, {
  3.792261795753765*^9, 3.792261803016933*^9}, {3.792261867398735*^9, 
  3.792261890548131*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"c39e2d25-c4ed-4b16-9b74-3967d539edc9"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"v0", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["n", "2"], "-", 
      RowBox[{"3", " ", "n", " ", "\[Alpha]"}], "+", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[Alpha]", "2"]}]}], ")"}]}], 
   RowBox[{"3", " ", 
    SuperscriptBox["\[Alpha]", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.7922618718100863`*^9, 3.792261891398829*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"863e1cb1-633e-4c6e-99cf-d601010085f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"morseTF", "[", 
       RowBox[{"n", ",", 
        RowBox[{"n", "/", "\[Alpha]"}], ",", "v0"}], "]"}], ",", "\[Alpha]"}],
      "]"}], "\[Equal]", "0"}], ",", "\[Alpha]"}], "]"}]], "Input",
 CellChangeTimes->{{3.792251329044313*^9, 3.79225137082227*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"dd959185-4b78-46ae-ba0c-2317ce036cec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", "n"}], "3"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.792251350186111*^9, 3.792251371296825*^9}},
 CellLabel->
  "Out[283]=",ExpressionUUID->"dc275015-a82f-4334-a62b-7b81744d0b65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"morseTF", "[", 
   RowBox[{"n", ",", 
    RowBox[{"n", "/", "\[Alpha]"}], ",", "v0"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"\[Alpha]", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", "n"}], "3"]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7922515144425898`*^9, 3.792251539053804*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"1ff832b0-b5ba-41d9-8903-0aede5cab025"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"n", " ", "v0"}], "4"]}]], "Output",
 CellChangeTimes->{3.792251539562126*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"44c1d8e9-7568-4499-a0f6-336e286bc389"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 2062},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
Magnification:>2. Inherited,
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 220, 4, 93, "Subsubsection",ExpressionUUID->"1271d184-a17b-433e-8f68-ea22f74acc3c"],
Cell[803, 28, 414, 9, 171, "Text",ExpressionUUID->"ae09cadd-d2e4-4e51-9c51-bb63e360fe77"],
Cell[CellGroupData[{
Cell[1242, 41, 570, 12, 252, "Input",ExpressionUUID->"1a257c6a-8f19-4ec8-bfc6-c2313d376d89"],
Cell[1815, 55, 271, 6, 133, "Output",ExpressionUUID->"406f6562-2959-4046-b484-19b9fe3cc91d"],
Cell[2089, 63, 273, 6, 102, "Output",ExpressionUUID->"8df5ac0e-1288-42d8-bda0-52c76a643c6e"],
Cell[2365, 71, 297, 7, 133, "Output",ExpressionUUID->"78729214-3e35-47b9-be6c-16c62a72cfcf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2699, 83, 315, 6, 63, "Input",ExpressionUUID->"9ad23b22-9220-4661-bbd1-f5d2aaf86374"],
Cell[3017, 91, 243, 5, 133, "Output",ExpressionUUID->"42eb3530-39a4-4376-97f5-9efadaff00d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3297, 101, 313, 6, 63, "Input",ExpressionUUID->"da79d5e8-e817-4442-86fe-6592b0f5371e"],
Cell[3613, 109, 201, 4, 102, "Output",ExpressionUUID->"de903f1f-2ae8-499a-a2e9-389ef6d8112d"]
}, Open  ]],
Cell[3829, 116, 406, 9, 63, "Input",ExpressionUUID->"748355c6-14b9-442f-a6e5-96d8c8f5acc8"],
Cell[CellGroupData[{
Cell[4260, 129, 1157, 26, 111, "Input",ExpressionUUID->"870862ea-fc71-4bfd-a150-fa6b3ebc8a9d"],
Cell[5420, 157, 42862, 781, 519, "Output",ExpressionUUID->"97b2ff52-4a56-4f3c-a2cc-724318257853"]
}, Open  ]],
Cell[48297, 941, 268, 5, 63, "Input",ExpressionUUID->"bebb42ed-ad96-48ba-bbbd-decfd9746f96"],
Cell[CellGroupData[{
Cell[48590, 950, 1684, 39, 158, "Input",ExpressionUUID->"19bfea1c-45d3-4da2-a637-2535662bce1d"],
Cell[50277, 991, 57130, 1016, 554, "Output",ExpressionUUID->"0b5a55ec-a5fa-4df2-89db-f6f34f997542"]
}, Open  ]],
Cell[107422, 2010, 266, 5, 63, "Input",ExpressionUUID->"768b83e8-0ef6-4ebd-afea-3a681d61402e"],
Cell[CellGroupData[{
Cell[107713, 2019, 221, 4, 106, "Input",ExpressionUUID->"69bafba9-8d0c-408b-9a80-0b80a553c610"],
Cell[107937, 2025, 193, 2, 102, "Output",ExpressionUUID->"2e1ff94e-29b1-41cf-ac55-72c4760a715c"]
}, Open  ]],
Cell[108145, 2030, 733, 15, 269, "Text",ExpressionUUID->"534e514c-bbb7-454d-84db-58e864e54eed"],
Cell[108881, 2047, 689, 16, 157, "Input",ExpressionUUID->"494dd59a-4f43-4e6e-ab8c-9d31d1598399"],
Cell[109573, 2065, 989, 25, 158, "Input",ExpressionUUID->"091d1569-83b3-429b-97d1-65a284dd26b0"],
Cell[CellGroupData[{
Cell[110587, 2094, 1047, 27, 122, "Input",ExpressionUUID->"93d0a0cb-6a56-4778-8c52-a0e0010a4f67"],
Cell[111637, 2123, 18735, 368, 541, "Output",ExpressionUUID->"d186951a-a196-4169-b169-5b5bcc0de562"]
}, Open  ]],
Cell[130387, 2494, 320, 7, 63, "Input",ExpressionUUID->"b77998f3-0289-4d13-9355-1cb70acc2fbd"],
Cell[CellGroupData[{
Cell[130732, 2505, 1064, 26, 122, "Input",ExpressionUUID->"e0d65677-b92a-4f7b-8caa-aa40eaac5c8e"],
Cell[131799, 2533, 46587, 824, 546, "Output",ExpressionUUID->"88626919-e879-4fa4-8f6e-068a4f342551"]
}, Open  ]],
Cell[178401, 3360, 272, 6, 63, "Input",ExpressionUUID->"b7ee34be-6e10-4648-ba60-6a3608909b6d"],
Cell[CellGroupData[{
Cell[178698, 3370, 355, 9, 63, "Input",ExpressionUUID->"68840bb5-8212-4985-b9d9-281083113f7a"],
Cell[179056, 3381, 177, 3, 102, "Output",ExpressionUUID->"e1584766-9042-4e8d-a581-0de334b93acb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179270, 3389, 353, 9, 94, "Input",ExpressionUUID->"5bd49615-9567-4c53-93a6-02a019518e94"],
Cell[179626, 3400, 153, 3, 102, "Output",ExpressionUUID->"b5ceaeee-e0d0-443d-89e9-ebc0045df755"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179816, 3408, 353, 9, 94, "Input",ExpressionUUID->"096c7dc0-72ad-4acd-9585-c1e0efb32cfd"],
Cell[180172, 3419, 153, 3, 102, "Output",ExpressionUUID->"8171e012-9d34-4770-90ac-de32f9273c9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180362, 3427, 360, 9, 100, "Input",ExpressionUUID->"79738f66-509e-4dd0-a971-0cd18e3e1152"],
Cell[180725, 3438, 177, 3, 102, "Output",ExpressionUUID->"c952128c-71df-4fd7-a7e3-7e31471328fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180939, 3446, 448, 12, 94, "Input",ExpressionUUID->"2c1e3451-08b1-40b5-a6e4-8713e84e58f5"],
Cell[181390, 3460, 153, 3, 102, "Output",ExpressionUUID->"1dd34f5e-475a-4a14-9eff-98b4b44c137d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181580, 3468, 525, 14, 94, "Input",ExpressionUUID->"f5a699d9-0f36-48b0-be64-049362e8d92a"],
Cell[182108, 3484, 155, 3, 102, "Output",ExpressionUUID->"264fa763-944b-4aec-86d5-55ecd921af87"]
}, Open  ]],
Cell[182278, 3490, 295, 8, 122, "Text",ExpressionUUID->"3475ddf9-b992-4ef9-b38c-8ec325b1d7d0"],
Cell[182576, 3500, 1177, 35, 331, "Input",ExpressionUUID->"38009d93-641a-4515-924b-021d75940689"],
Cell[183756, 3537, 869, 23, 189, "Input",ExpressionUUID->"d5dde6db-b726-47e4-a2c6-9d29b13d6d77"],
Cell[CellGroupData[{
Cell[184650, 3564, 894, 18, 100, "Input",ExpressionUUID->"75da4cf1-11bd-4469-a30b-560741bd446e"],
Cell[185547, 3584, 2841, 67, 658, "Output",ExpressionUUID->"53c80e45-7c67-4536-845c-571f66fa763d"]
}, Open  ]],
Cell[188403, 3654, 380, 9, 171, "Text",ExpressionUUID->"05d8e6e5-d297-4ebb-83b6-2d5ef758524d"],
Cell[188786, 3665, 873, 23, 158, "Input",ExpressionUUID->"9b54543e-c261-415f-9e10-a987cbcf208f"],
Cell[CellGroupData[{
Cell[189684, 3692, 700, 16, 69, "Input",ExpressionUUID->"0ca81660-c028-496a-a6e5-ed4d8b1e9215"],
Cell[190387, 3710, 2852, 66, 658, "Output",ExpressionUUID->"12aa7972-7768-4432-a47e-dd3ca513bf3f"]
}, Open  ]],
Cell[193254, 3779, 335, 9, 171, "Text",ExpressionUUID->"ce6fd5d8-a96f-4733-a18e-5c4b52ed7bb8"],
Cell[193592, 3790, 1179, 34, 252, "Input",ExpressionUUID->"b30edf64-f2df-477d-8359-1f9c624d478b"],
Cell[194774, 3826, 1366, 36, 215, "Input",ExpressionUUID->"e0024273-dc66-4398-8a05-d9efa1bdb4ce"],
Cell[CellGroupData[{
Cell[196165, 3866, 1050, 21, 122, "Input",ExpressionUUID->"0d4b5249-8851-488f-bc79-e6d643b8ccbf"],
Cell[197218, 3889, 4900, 116, 696, "Output",ExpressionUUID->"0d6d85fc-946c-4d4a-a043-d2a96e78a2e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202155, 4010, 465, 14, 63, "Input",ExpressionUUID->"aafc4ee8-6712-43fb-87af-c56dac178334"],
Cell[202623, 4026, 535, 16, 133, "Output",ExpressionUUID->"037d17e9-292f-453c-9e29-3ec212f54c61"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[203207, 4048, 219, 4, 93, "Subsubsection",ExpressionUUID->"9d5b6aa3-59f6-4fd0-b172-12f7edf6fec7"],
Cell[203429, 4054, 255, 7, 122, "Text",ExpressionUUID->"9b675d9c-991f-4a27-8ed5-497f65e3058a"],
Cell[CellGroupData[{
Cell[203709, 4065, 640, 19, 130, "Input",ExpressionUUID->"a1fdfdb7-66d1-4638-aa96-f21af2377c64"],
Cell[204352, 4086, 157, 3, 102, "Output",ExpressionUUID->"b0915968-9485-40fd-b6fd-722224ea2698"]
}, Open  ]],
Cell[204524, 4092, 259, 7, 122, "Text",ExpressionUUID->"ffb4c0e2-eeab-411f-a84f-186c46c8dc59"],
Cell[204786, 4101, 175, 3, 73, "Text",ExpressionUUID->"5415d0de-e6d2-424a-b0a6-528d35515afc"],
Cell[CellGroupData[{
Cell[204986, 4108, 890, 28, 156, "Input",ExpressionUUID->"9f14bb5d-06ed-491a-92c3-8bf840b7b3e9"],
Cell[205879, 4138, 274, 6, 133, "Output",ExpressionUUID->"777382b0-9229-4475-8cf1-fa11b25bae74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206190, 4149, 767, 25, 130, "Input",ExpressionUUID->"a976e51a-4dda-44dd-92fe-67d9f9ea26cd"],
Cell[206960, 4176, 199, 5, 133, "Output",ExpressionUUID->"049e9466-a3be-4124-9209-891cf9caaf98"]
}, Open  ]],
Cell[207174, 4184, 233, 7, 122, "Text",ExpressionUUID->"6f75772e-e34c-466c-b31f-cc4e4c21a6d7"],
Cell[CellGroupData[{
Cell[207432, 4195, 387, 12, 106, "Input",ExpressionUUID->"ff8ef36d-c9ad-4ec4-a6d5-b4bb31792b12"],
Cell[207822, 4209, 215, 6, 125, "Output",ExpressionUUID->"a227a23e-cee5-4871-8472-7065a37a3689"]
}, Open  ]],
Cell[208052, 4218, 350, 8, 122, "Text",ExpressionUUID->"c7a529d2-32ee-41ed-bcb8-fa056d39170a"],
Cell[208405, 4228, 1732, 56, 432, "Input",ExpressionUUID->"0c3048be-789f-4901-ab03-aff262abb905"],
Cell[CellGroupData[{
Cell[210162, 4288, 1710, 43, 175, "Input",ExpressionUUID->"6b0b0116-8493-4253-9d46-11079994269b"],
Cell[211875, 4333, 55314, 994, 577, "Output",ExpressionUUID->"19db8db1-97e4-4874-ba32-a3dba33caff1"]
}, Open  ]],
Cell[267204, 5330, 274, 6, 63, "Input",ExpressionUUID->"e8946500-9aa4-43dc-be93-782ac1735613"],
Cell[CellGroupData[{
Cell[267503, 5340, 1860, 47, 175, "Input",ExpressionUUID->"dfd3f887-1cf1-415e-be76-75f7d981f20a"],
Cell[269366, 5389, 58649, 1049, 577, "Output",ExpressionUUID->"f3302dc7-12c6-4560-89be-1380034badaf"]
}, Open  ]],
Cell[328030, 6441, 276, 6, 63, "Input",ExpressionUUID->"f89f2c6d-aa76-49d7-8ca9-af802b18b3ba"],
Cell[CellGroupData[{
Cell[328331, 6451, 1677, 43, 221, "Input",ExpressionUUID->"e85d1481-f095-46ea-bd01-4c5770fd7cc9"],
Cell[330011, 6496, 64687, 1150, 557, "Output",ExpressionUUID->"fc73369e-4c63-411e-b1cd-64f883c4431d"]
}, Open  ]],
Cell[394713, 7649, 276, 6, 63, "Input",ExpressionUUID->"9acee978-2ace-47b6-adfa-e02ea9309b9b"],
Cell[394992, 7657, 478, 13, 122, "Text",ExpressionUUID->"15b517a7-d40f-4274-a6ba-0bfb87323ada"],
Cell[CellGroupData[{
Cell[395495, 7674, 443, 12, 63, "Input",ExpressionUUID->"d925cc44-a43a-4d27-8595-ca3cac231466"],
Cell[395941, 7688, 179, 3, 102, "Output",ExpressionUUID->"a3343157-f3f1-4bd1-a4b8-493c75219fbf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396157, 7696, 476, 14, 63, "Input",ExpressionUUID->"19d37f95-666c-4e9a-91f8-306aea2f9850"],
Cell[396636, 7712, 179, 3, 102, "Output",ExpressionUUID->"18813d63-fdca-4bf1-9335-2d45562df051"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396852, 7720, 476, 14, 63, "Input",ExpressionUUID->"e48a6117-73b6-4b80-b484-49bb72d94e87"],
Cell[397331, 7736, 155, 3, 102, "Output",ExpressionUUID->"4c261307-1930-47c2-acbc-9c21ebd172e2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397523, 7744, 402, 11, 69, "Input",ExpressionUUID->"75c03771-b9cb-4dfa-997f-4d8bbf6987c5"],
Cell[397928, 7757, 153, 3, 102, "Output",ExpressionUUID->"d141c2f0-21bd-4a0d-8518-164b40b8c130"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398118, 7765, 496, 14, 69, "Input",ExpressionUUID->"9c15fb07-08e3-4063-be0e-56faffe2db9a"],
Cell[398617, 7781, 155, 3, 102, "Output",ExpressionUUID->"c1a7b556-b2fd-49fa-ba36-5eeaa9776c47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398809, 7789, 570, 16, 69, "Input",ExpressionUUID->"85126530-fbf3-48aa-b7eb-a1efb14c7de3"],
Cell[399382, 7807, 177, 3, 102, "Output",ExpressionUUID->"ba233684-7b5c-41ed-b445-a04b0b4ca34f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[399608, 7816, 216, 4, 93, "Subsubsection",ExpressionUUID->"5fa9634f-4edd-4eb5-a6ef-7eef4fa9aa22"],
Cell[399827, 7822, 277, 7, 122, "Text",ExpressionUUID->"c3f47992-aa26-4d89-9b71-bb226a683ad7"],
Cell[400107, 7831, 429, 11, 68, "Input",ExpressionUUID->"96bc4fce-85d3-4f56-a9b8-5cbdac39e392"],
Cell[CellGroupData[{
Cell[400561, 7846, 563, 14, 63, "Input",ExpressionUUID->"c39e2d25-c4ed-4b16-9b74-3967d539edc9"],
Cell[401127, 7862, 490, 13, 140, "Output",ExpressionUUID->"863e1cb1-633e-4c6e-99cf-d601010085f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[401654, 7880, 449, 12, 63, "Input",ExpressionUUID->"dd959185-4b78-46ae-ba0c-2317ce036cec"],
Cell[402106, 7894, 308, 8, 126, "Output",ExpressionUUID->"dc275015-a82f-4334-a62b-7b81744d0b65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402451, 7907, 411, 11, 100, "Input",ExpressionUUID->"1ff832b0-b5ba-41d9-8903-0aede5cab025"],
Cell[402865, 7920, 216, 6, 126, "Output",ExpressionUUID->"44c1d8e9-7568-4499-a0f6-336e286bc389"]
}, Open  ]]
}, Open  ]]
}
]
*)

